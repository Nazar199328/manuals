1
1. Скачивание образа и создание загрузочной флешки
--------------------------------------------------
http://mirror.yandex.ru/gentoo-distfiles/releases/amd64/autobuilds/ - зеркало яндекса для скачивания iso и stage3
С данного зеркала качаем Calculate

2. Подготовка дисков.
----------------------
# fdisk /dev/sda

Device     Boot  Size     Type
/dev/sda1  *     50G      HPFS/NTFS/exFAT
/dev/sda2        200M     Linux
/dev/sda3        8G       Linux swap / Solaris
/dev/sda4        873.3G   Extended
/dev/sda5        20G      Linux
/dev/sda6        858.3G   Linux

# mkfs.ext2 -L boot /dev/sda2
# mkfs.ext4 -L root /dev/sda5
# mkfs.ext4 -L home /dev/sda6

# mkswap -L swap /dev/sda3
# swapon /dev/sda3

# mkdir /mnt/gentoo
# mount /dev/sda5 /mnt/gentoo
# mkdir /mnt/gentoo/{boot,home}
# mount /dev/sda2 /mnt/gentoo/boot
# mount /dev/sda6 /mnt/gentoo/home

3. Установка stage3
-------------------
# cd /mnt/gentoo

Качаем stage3
# links http://mirror.yandex.ru/gentoo-distfiles/releases/amd64/autobuilds/
Чтобы скачать нажимаем букву "d"

Распаковываем архив:
#tar xvjpf stage3-*.tar.bz2 --xattrs
--xattrs будет включать расширенные атрибуты, хранящиеся в архиве.

http://linuxforum.ru/topic/476 - примеры make.conf

Настоим кейбинды nano:
# cd /usr/share/nano/
# curl -O https://raw.githubusercontent.com/lazyfox81/dotfiles/master/keybinds.nanorc
# nano -w /etc/nanorc
------------------------------
include "/usr/share/nano/*.nanorc"

Конфигурируем опции компиляции:
nano -w /mnt/gentoo/etc/portage/make.conf
-------------------------------------
CFLAGS="-O2 -march=native -msse -msse2 -mssse3 -mmmx -pipe"
CXXFLAGS="${CFLAGS}"
MAKEOPTS="-j5"
--------------------------------------
-pipe - использование каналов вместо временных файлов. Требует много памяти
-march - имя целевой архитектуры. native означает текущую архитектуру

Или лучше скопировать с флехи:
cp /run/media/guest/0477-8AE1/make.conf /mnt/gentoo/etc/portage/make.conf

4. Установка базовой системы.
-----------------------------
nano -w /etc/resolve.conf
------------------------
nameserver 8.8.4.4
nameserver 8.8.8.8

Добавим GENTOO_MIRRORS и SYNC соответственно
# mirrorselect -i -o >> /mnt/gentoo/etc/portage/make.conf
# mirrorselect -i -r -o >> /mnt/gentoo/etc/portage/make.conf

Или просто в make.conf
------------------------------
GENTOO_MIRRORS="http://mirror.yandex.ru/gentoo-distfiles/"
----------------------------------

cp -L /etc/resolv.conf /mnt/gentoo/etc/ - информация о DNS-серверах
ключ -L не дает скопировать символьную ссылку. Только собственно файл

Монтируем файловые системы:
# mount -t proc proc /mnt/gentoo/proc
# mount --rbind /sys /mnt/gentoo/sys
# mount --make-rslave /mnt/gentoo/sys
# mount --rbind /dev /mnt/gentoo/dev
# mount --make-rslave /mnt/gentoo/dev


Применим для новой генты наши нано-кейбинды:
# cp /usr/share/nano/keybinds.nanorc /mnt/gentoo/usr/share/nano/

Переходим в свежеустановленную систему (chroot):
# chroot /mnt/gentoo /bin/bash
# source /etc/profile
# export PS1="(chroot) $PS1"

Установим portage:
# mkdir /usr/portage
# emerge-webrsync

Обновим portage:
emerge --sync

Выберем профиль системы:
# eselect profile list
# eselect profile set 3

Посмотрим возможные use-флаги:
# emerge --info | grep ^USE

Описание всех флагов:
less /usr/portage/profiles/use.desc

Настроим USE:
nano -w /etc/portage/make.conf
-------------------------------
USE="X -gtk gtk2 gtk3 -gnome -kde qt4 udev /
    mmx sse sse2 ssse3 alsa acpi dbus /
    -pulseaudio"

Временная зона:
# echo "Europe/Moscow" > /etc/timezone
# emerge --config sys-libs/timezone-data

# nano -w /etc/locale.gen
-------------------------
en_US.UTF-8 UTF-8
en_US ISO-8859-1

Генерируем локали:
# locale-gen

# eselect locale list

Выберем английскую utf-8 локаль:
# eselect locale set <номер локали>

Обновляем профили:
# env-update && source /etc/profile

4. Настройка ядра.
------------------
Ставим исходники ядра
# emerge --ask sys-kernel/gentoo-sources

Здесь должен оказаться симлинк на ядро:
# ls -l /usr/src/linux

Установим пакет, содержащий утилиту lspci
# emerge --ask sys-apps/pciutils

Посмотрим список pci-устроиств
# lspci

Перейдем в папку с симлинком и запустим конфигуратор ядра:
# cd /usr/src/linux
# make menuconfig

--------------------------------------------------------------
Далее нужно сконфигурировать ядро.
--------------------------------------------------------------
General setup --->
Включить поддержку swap:
[*] Support for paging of anonymous memory (swap)

Сохранять настройки в .config:
<*> Kernel .config support

Иметь возможность брать настройки из /proc/config.gz:
[*] Enable access to .config through /proc/config.gz

Поддержка initrd/initramfs:
[*] Initial RAM filesystem and RAM disk (initramfs/initrd) support

Включить поддержку многоядерности процессора:
Processor type and features  --->
  [*] Symmetric multi-processing support

Отключим поддержку IPv6:
Networking support --->
    Networking options --->
         < >   The IPv6 protocol  ---- 

Инфракрасный порт не нужен:
< >   IrDA (infrared) subsystem support  --->

Синезуб не нужен:
< >   Bluetooth subsystem support  --->
        Bluetooth device drivers  --->

Клавиша включения wifi:
<*>   RF switch subsystem support  --->

Поддержка стандарта 802.11 для беспроводных сетей:
-*-   Wireless  --->
    <M> cfg80211 - wireless configuration API
    [*] cfg80211 wireless extensions compatibility

Пусть небходимые устройства монтируются в /dev на этапе загрузки:
Device Drivers --->
  Generic Driver Options --->
    [*] Maintain a devtmpfs filesystem to mount at /dev
    [ ]   Automount devtmpfs at /dev, after the kernel mounted the rootfs

Указать поддерживаемые файловые системы. Также выбрать виртуальные системы и /proc
файловые системы.
File systems --->
(Select one or more of the following options as needed by your system)
  <*> Second extended fs support
  < > Ext3 journalling file system support
  <*> The Extended 4 (ext4) filesystem
  < > Reiserfs support
  < > JFS filesystem support
  < > XFS filesystem support
  ...
  Pseudo Filesystems --->
    [*] /proc file system support
    [*] Tmpfs virtual memory file system support (former shm fs)


NTFS support:
File systems  --->
    <*> FUSE (Filesystem in Userspace) support

File systems  --->
    DOS/FAT/NT Filesystems  --->
        <*> NTFS file system support
        <*>   NTFS write support


Поддержка evdev (EVent DEVice)(драйвер для клавиатур, мышей и т.д)
Device Drivers  --->
    Input device support  --->
        <*>   Event interface

Отключим поддержку джойстиков, тачскринов и каких-то таблеток на уровне ядра:
Device Drivers  --->
    Input device support  --->
         [ ]   Joysticks/Gamepads  ---- 
         [ ]   Tablets  ----
         [ ]   Touchscreens  ----

Для работы synaptic нужно-таки включить:
Device Drivers  --->
   Input device support  --->
      <*>   Event interface
      [*]   Mice  --->
         <*>   PS/2 mouse

Отключим поддержку макинтоша:
Device Drivers  --->
     [ ] Macintosh device drivers  ----

Включить поддержку HID (необходимо для  usb клавиатур, мышей etc):
Device Drivers --->
  [*] HID Devices  --->
    <*>   USB Human Interface Device (full HID) support

Включим мышку A4tech:
Device Drivers --->
   HID support  --->
      Special HID drivers  ---> 
          <*> A4 tech mice

Для некоторых мышей нужно:
Device Drivers  --->
    [*] USB support  --->
        [*]   Improved Transaction Translator scheduling

Включим поддержку usb 3.0:
Device Drivers  --->
    [*] USB support  --->
         <*>     xHCI HCD (USB 3.0) support  
         <*>       Generic xHCI driver for platform device
 
Включить IA32 Emulation для поддержку 32-битных приложений:
Processor type and features  --->
   [*] Machine Check / overheating reporting 
   [*]   Intel MCE Features
   [ ]   AMD MCE Features
  Processor family (AMD-Opteron/Athlon64)  --->
    ( ) Opteron/Athlon64/Hammer/K8
    ( ) Intel P4 / older Netburst based Xeon
    ( ) Core 2/newer Xeon
    ( ) Intel Atom
    (*) Generic-x86-64
Executable file formats / Emulations  --->
   [*] IA32 Emulation

Если используется UEFI, включить UEFI и GPT как написано в handbook

Включить в ядро ALSA и выбрать поддержку всех кодеков:
Device Drivers --->
    <*> Sound card support
        <*> Advanced Linux Sound Architecture --->
            [*] PCI sound devices  --->

                Select the driver for your audio controller, e.g.:
                <*> Intel HD Audio  ---> (snd-hda-intel)
                    Select a codec or enable all and let the generic parse choose the right one:
                    [*] Build Realtek HD-audio codec support
                    [*] ...
                    [*] Build Silicon Labs 3054 HD-modem codec support
                    [*] Enable generic HD-audio codec parser
General setup --->
    [*] System V IPC

Для интерфейса Ethernet:
Device Drivers  --->
     [*] Network device support --->
            [*]   Ethernet driver support  --->
                     [*]   Atheros devices
                     <*>     Atheros L2 Fast Ethernet support 
		     <*>     Atheros/Attansic L1 Gigabit Ethernet support
                     <*>     Atheros L1E Gigabit Ethernet support
                     <*>     Atheros L1C Gigabit Ethernet support
                     <*>     Qualcomm Atheros AR816x/AR817x support

Для NVIDIA:
------------

Включить поддержку модульности ядра:
[*] Enable loadable module support --->

Включить поддержку MTRR:
Processor type and features --->
   [*] MTRR (Memory Type Range Register) support

Включить поддержку AGP
Device Drivers --->
   Graphics support --->
      -*- /dev/agpgart (AGP Support) --->

Для x64 процессор внутриядерный framebuffer (кэширование видео в RAM) конфликтует с 
бинарным драйвером NVIDIA, поэтому отключаем framebuffer nvidia:  
Device Drivers --->
    Graphics support --->
        Frame buffer Devices --->
            <*> Support for frame buffer devices --->
            < >   nVidia Framebuffer Support
            < >   nVidia Riva support

Отключаем поддержку свободного драйвера:
Device Drivers  --->
    Graphics support  --->
        <*> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
            < > Nouveau (nVidia) cards

Для гибридной графики включить следующие опции:
Device Drivers  --->
   Graphics Support  --->
      Direct Rendering Manager (Xfree86 4.1.0 and higher DRI support)   --->
         [*]   Enable legacy fbdev support for your modesetting driver 
      <*> Intel 8xx/9xx/G3x/G4x/HD Graphics
      [*]   Enable preliminary support for prerelease Intel hardware by default

---------------------------------------------------------
Скомпилируем ядро с модулями:
# make && make modules_install

Скомпилированное ядро переместим в /boot:
# make install

Установим initramfs - an initial ram-based file system:
# emerge genkernel
# genkernel --install initramfs

Установим требуемый софт:
--------------------------
# emerge -av net-misc/dhcpcd
# emerge -av sys-boot/grub # установим grub2
# emerge -av sys-fs/ntfs3g # поддержка NTFS
# emerge -av sys-boot/os-prober # для того, чтобы grub нашел винду
# emerge -av dev-vcs/git
# emerge -av app-portage/gentoolkit # equery, euse и др.
# emerge -av x11-drivers/nvidia-drivers
# emerge -av media-sound/alsa-tools
# emerge -av dev-python/termcolor # цветной выхлоп для питона
# emerge -av dev=python/pygments  # цветной выхлоп в консоль, нужен для colorize
# emerge -av gst-plugins-libav gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly # вместо flash

4. Конфигурирование системы.
---------------------------

Настроим монтирование ФС:
# mkdir /media/{usb_fat, usb_ntfs}
# nano -w /etc/fstab
-------------------
/dev/sda2   /boot        ext2    defaults,noatime     0 2
/dev/sda3   none         swap    sw                   0 0
/dev/sda5   /            ext4    noatime              0 1
/dev/sda6   /home        ext4    noatime              0 1

/dev/sda1 /media/windows   ntfs-3g   defaults,uid=1000,gid=100,fmask=0133,dmask=0022   0 0
/dev/sdb1 /media/usb_fat vfat user,fmask=0133,dmask=0022,noauto,noatime,flush 0 0
/dev/sdb1 /media/usb_ntfs ntfs-3g user,uid=1000,gid=100,fmask=0133,dmask=0022,noauto,noatime,flush  0 0

Укажем имя хоста:
# nano -w /etc/conf.d/hostname
-------------------------------
hostname="gentoo"

Далее, настроим интернет.
Имя сетевого интерфейса:
# ifconfig -a

# dhcpcd enp14s0

# nano -w /etc/conf.d/net
------------------------
config_enp14s0="dhcp"

# cd /etc/init.d
# ln -s net.lo net.enp14s0
# rc-update add net.enp14s0 default
# cd /

Создадим пароль рута:
# passwd

Настроим параметр часов. Можно написать utc, если аппаратные часы настроены на utc.
Но при дуалбуте с вяндой лучше написать local
# nano /etc/conf.d/hwclock
------------------------
clock="local"

5. Конфигурирование grub:
# grub2-install /dev/sda

# nano -w /etc/default/grub
-------------------------------


Генерируем конфиг
# grub2-mkconfig -o /boot/grub/grub.cfg
# Grub должен найти: vmlinuz, initramfs, виндовс

Настроим NVIDIA:
# nano -w /etc/conf.d/modules
--------------------------
modules="nvidia"

# rc-update add modules boot
# cd /etc/X11/
# curl -O https://raw.githubusercontent.com/lazyfox81/xorg/master/xorg.conf

7. Перезагрузка системы.
Выйдем из chroot и отмонтируем разделы
# exit
cdimage ~# cd
cdimage ~# umount -l /mnt/gentoo/dev{/shm,/pts,}
cdimage ~# umount -l /mnt/gentoo{/boot,/sys,/proc,}
cdimage ~# reboot


8. Окончание установки.

Залогинимся под root и создадим пользователя:
# useradd -m -G users,wheel,video,audio,cdrom,usb   -s /bin/bash mikhail

video - необходима для поддержки opengl
audio - необходима для поддержки alsa
Удалим stage3:
#rm /stage3-*.tar.bz2*

6. Установка иксов
------------------
nano -w /etc/portage/make.conf
-------------------------------
INPUT_DEVICES="evdev mouse keyboard synaptics"
VIDEO_CARDS="intel nvidia"

Просчитаем зависимости:
# emerge --ask --verbose --pretend x11-base/xorg-drivers

После того, как расставим необходимые USE-флаги:
# emerge --ask x11-base/xorg-server

#env-update
#source /etc/profile

Если вылезает сообщение: file /home/GoinEasy9/.serverauth.1892 does not exist
# nano -w /usr/bin/startx
enable_xauth=0

Если при запуске вылезает myhostname.unknown_domain.
# nano -w /etc/hosts
127.0.0.2        machinename.domain         machinename
Вместо machinename подставить имя хоста
